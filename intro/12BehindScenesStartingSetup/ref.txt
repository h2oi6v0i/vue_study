📚 ref

@input, v-model 등 어떤 방식을 사용하든 기본적으로 사용자의 모든 키 입력을 출력한다.
이렇게 사용자가 입력한 값이 모두 필요할 때도 있지만 전부 알 필요가 없을 때도 있다.
Vue에는 필요할 때만 DOM 요소로부터 값을 가지고 오는 기능이 있다. 그게 바로 ref

ref="userText" <-- 내가 원하는 거 입력하면 됨
input 외에도 p, h, section, textarea 등 아무데나 ref 추가 가능

왜 써?
Vue는 ref를 감지하고 내부에 이를 저장한다.
이번 예제에서는 해당 input 요소에 내가 엑세스하고자 한다는 점을 기억한다.
그리고 JavaScript 코드에서 엑세스를 갖도록 한다.

Vue가 지원하는 모든 프로퍼티는 내장 프로퍼티임을 표시하기 위해 $로 시작한다. 
key : value로 이루어진 객체로 key는 템플릿에서 설정한 ref 식별자이다.
this.meesage = this.$refs.userText;


📚 Vue가 DOM을 업데이트하는 방법

Vue는 화면 전체가 아닌 해당 문단만 업데이트한다.
가상 DOM이라는 개념을 통해 이 작업을 수행하는데 왜 이런 방식으로 DOM을 업데이트할까?
가상 DOM이란 실제 DOM의 가상 복사본인데 전반적으로 JavaScript가 관리하기 때문에 JS 기반 DOM이며 메모리에 위치한다.
JavaScript 객체의 집합으로 Vue는 여기서 어떤 HTML 태그가 필요한지, 해당 태그의 콘텐츠가 무엇인지를 기억한다.
그리고 데이터에 업데이트가 발생하면 새로운 가상 DOM을 생성해서 새로운 가상 DOM과 기존 가상 DOM을 비교한다.
그리고 두 가상 DOM 간 차이점만 실제 DOM에 쓰인다.